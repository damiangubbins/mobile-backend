name: Build and Release Rust API

on:
  push:
    tags:
      - 'v*' # Trigger on version tags (e.g., v1.0.0)

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: linux-x86_64
            binary_name: mobile-backend-linux
          - os: windows-latest
            artifact_name: windows-x86_64
            binary_name: mobile-backend-windows.exe

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build release binary
        run: cargo build --release

      - name: Strip binary (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: strip target/release/mobile-backend

      - name: Rename binary
        run: |
          mkdir -p release
          cp target/release/mobile-backend${{ matrix.os == 'windows-latest' && '.exe' || '' }} release/${{ matrix.binary_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: release/${{ matrix.binary_name }}

  create-release:
  name: Create Release
  needs: build-and-release
  runs-on: ubuntu-latest
  if: startsWith(github.ref, 'refs/tags/')

  steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref_name }}
        body: |
          Cross-platform release of Rust API
          - Linux x86_64
          - Windows x86_64
        files: |
          artifacts/linux-x86_64/my-api-linux
          artifacts/windows-x86_64/my-api-windows.exe